{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xd7486f6c1AdD888D52dB395f0362BEb670128f2b",
    "txHash": "0x1ef3c4cadab87f1698dda094fe6b1846c0b1191ba35e89fa6ac99686f27ff1db",
    "deployTransaction": {
      "hash": "0x1ef3c4cadab87f1698dda094fe6b1846c0b1191ba35e89fa6ac99686f27ff1db",
      "type": null,
      "accessList": null,
      "blockHash": "0xd7e13e3c48051d9fc6a81f3a0b27e44c209f2076fbe7b3841e99bd686dc36022",
      "blockNumber": 1426,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0x5409ED021D9299bf6814279A6A1411A7e866A631",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x2c5420"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 848,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x64bedd780876acfa23b9f97e48905f7166856399209e70d5788a4ca3874207cf",
      "s": "0x23e4af7b1745f31d0a169d5746136f00a3f2c3705c232dae2d563e6b6de9a885",
      "v": 27,
      "creates": "0xd7486f6c1AdD888D52dB395f0362BEb670128f2b",
      "chainId": 0
    }
  },
  "proxies": [
    {
      "address": "0x05D1A31123572fB8493666bc3af8Ad77CF197eF3",
      "txHash": "0x4c92b6380db1bfb9b81e92d112b602717809220c9feb3777d3ea36dab9e9b195",
      "kind": "transparent"
    },
    {
      "address": "0x4c6b7d19857dF9Dd1A1546D29d3AC8B2d1a9Bda5",
      "txHash": "0x548debf4a46151f919795a9ab2276f6f40410d53822df1bc416d07a68efdf181",
      "kind": "transparent"
    },
    {
      "address": "0xbc1768F0A9feAAa035e6B92A5c22FB4c09CC2C24",
      "txHash": "0x5205c2a03e643756d7f8889f38b910619a0236b650ff4c580d20344f83a2d0d3",
      "kind": "transparent"
    },
    {
      "address": "0x2df6b59309f35ADa230ec7D61d7D97355017a1df",
      "txHash": "0x15a50199c8b3e6a32b707611c0eda7c512deebf2288dde443e347ba43879c205",
      "kind": "transparent"
    },
    {
      "address": "0x9857C49C4fcf649dA2806572fcfC268BA516dDEF",
      "txHash": "0x6279fc4d2a2872e3d1b087a8d41d18b963ff7588aab0b413975a6714f1904e60",
      "kind": "transparent"
    },
    {
      "address": "0x4640Fc1cA685b849598165C42960C8fA30B94bBa",
      "txHash": "0xdbcc33e982f2c47ed5179833ed3a2edeab11af88d075954e0abc3eac3f85083d",
      "kind": "transparent"
    },
    {
      "address": "0xF9fB5261AaE582c99481F578B96D5009e8d7F0CD",
      "txHash": "0x57964c39d9874ac21f6e6db063a2988baabaa850338b5479837cddf0cb46ea41",
      "kind": "transparent"
    },
    {
      "address": "0xD8215756cd43Cf21c0D8b555EE68C959833aad64",
      "txHash": "0xc15efd714195ccf108cddc9c9952a9c8e637d9c1fcc039dd372e4b0893de805e",
      "kind": "transparent"
    },
    {
      "address": "0x2dB6BaF87de425D198201f931A019153Ed12dB98",
      "txHash": "0x44f51ae37af69a977e2acc5153771fe34361c2d6e5f050d1693b2156fa928b3d",
      "kind": "transparent"
    },
    {
      "address": "0xB04852C2101d85d825D3b5932753Cbb73405e46D",
      "txHash": "0xa61d73deac900f0feafaf72185d4b88ff5eaa128be8217dbb0ab05536e82258f",
      "kind": "transparent"
    },
    {
      "address": "0xaA91ecE2D8CFb5f02F6BE413c6B3A9f30dAAAf95",
      "txHash": "0x8c374fe0ac9143e0387ac150270417dd5c9c4b9f5f381a36ab3848fb21b3c7dd",
      "kind": "transparent"
    },
    {
      "address": "0x85e865824c10ADA3EFB0C0a79Ec49EEDe2Fad090",
      "txHash": "0x7be5748bdd21f51ecdb929046373432403e6f6e0f9005beb910845ebc2897fe9",
      "kind": "transparent"
    },
    {
      "address": "0xe83D53c1Da1F0a358A0450271Cf273db1D14D2B8",
      "txHash": "0xbec1a93acdce60c167c1a3e7ae9baf23d959b991ec7783d00e94858eb163b925",
      "kind": "transparent"
    },
    {
      "address": "0x2f0D79D4eCC12964ed2Ddd9209699D253ec2915c",
      "txHash": "0xfbb7abd5ccb91f5025ab697605907d103f456f63a96c181e4ca5e576e3ab27f5",
      "kind": "transparent"
    },
    {
      "address": "0x77C03Deb666F8b3523c23E9C657D72298343632F",
      "txHash": "0x6a95aa5d5c78a800ca673b58e617706a9320529815c39e9bfc076944bba5dfdd",
      "kind": "transparent"
    },
    {
      "address": "0xB57534bDaEB46C1029ebF9a29615E10BD5B86BE8",
      "txHash": "0x46c8d43142ccc9a7ba18e278c0756aa03b931878ae14b05027f38c5acfc0c24a",
      "kind": "transparent"
    },
    {
      "address": "0x5593d1c9bCE28E2F1E2Bf87Fc64F8F17f48Bd7a8",
      "txHash": "0xa96213746ab3c256d299b345be6039a457c3a719fffb3f86a092cc937f0cc74d",
      "kind": "transparent"
    },
    {
      "address": "0x07B12Eb8bd1Ac70F3b68EE8EbEc15d260e333E97",
      "txHash": "0x577686899d2591bbf5a9e947f580c5ff43da56b7571c3a109ba80209e974f028",
      "kind": "transparent"
    },
    {
      "address": "0x9fF4Fac94163c8e0B4a4DADbE2342ed896826ba8",
      "txHash": "0x8d9d41cd34cb77df04d4c04b3814d587505013dd4e1e2899ebb9b81cef31759f",
      "kind": "transparent"
    },
    {
      "address": "0xfadE88Ec188156EbF6b57c1f7EE1221220194074",
      "txHash": "0xd9d558e0f55202e166c9422f8560d56cc26124354d82f9cfeada3faeda89c9bb",
      "kind": "transparent"
    },
    {
      "address": "0xB22CcaBd3820255FaE611E21b9948Dd784a973dB",
      "txHash": "0x379a514720eacb468551a815c224175b3da3f54db220dda6a3dfd06ced451b5e",
      "kind": "transparent"
    },
    {
      "address": "0x8B5D0A67CCe4AefED8FADc46ebe73e92d3AB1322",
      "txHash": "0x263a6cc2eac207f6000a50361340090288b951bfe676a63ec7a80d5714702d21",
      "kind": "transparent"
    },
    {
      "address": "0x8c1c72d07C158938FF5280c12f9AfC42f0e36515",
      "txHash": "0x35bcaedbffc39c03bd098bb5b329d4ea909e7b7975efd80aa72295a9bd12f4db",
      "kind": "transparent"
    },
    {
      "address": "0x96f524403118521459ab97e61716E0A86f50F791",
      "txHash": "0x14a011a707882678437c8fa1a87110dab3a693b00bca51230ac9da388d77ec68",
      "kind": "transparent"
    },
    {
      "address": "0x7F77D5a7854FD1F1a293F45B2FA60e1496e699e2",
      "txHash": "0xd07b35f2cfe2c8540e49cc46a0a460ed45d15563eb55c2673e2ee10f9163966d",
      "kind": "transparent"
    },
    {
      "address": "0x4dab8B21E4f6c657beC9d1f9A60d53372784CCbB",
      "txHash": "0xb73af04af9f118a0706790035b23713680aca508d1e14d1bd814b05570e25afb",
      "kind": "transparent"
    },
    {
      "address": "0x530d703fd066Ac587f8AB14FBfE0A0414CFfB634",
      "txHash": "0xc2bcf14ddaa077d52babaff779116299bdffe82228db4bcbe552f45d082a1af0",
      "kind": "transparent"
    },
    {
      "address": "0xcd95207B2F4D22b126B97d87D8625Ea425665e50",
      "txHash": "0x73c281845de3a69c1a0305093fb152a2bae8bf45a7549f0fbd4c9ef13cee42dd",
      "kind": "transparent"
    },
    {
      "address": "0xb5d38cce1cA0E3A0f8e24A776FB99B4B112d6Bbe",
      "txHash": "0x7ae45ef13c3465697bef1d4615c5e3a6ef26798380e881eeedceb334dda7008f",
      "kind": "transparent"
    },
    {
      "address": "0x74eCC93bCa5301BAF3EC2A73aa9527C666fE1623",
      "txHash": "0x57ae71ac22d099df148797b8b01b70dbf1418806a03f395854470116a7a8691a",
      "kind": "transparent"
    },
    {
      "address": "0x0Be493BfaE4d6c2EAF9D5d44Ba296429489eD75c",
      "txHash": "0x7f6be4e888ab0db09f361fac3ea2bd9f271d05b90a179499ad6e4299e2fbb75e",
      "kind": "transparent"
    },
    {
      "address": "0x6E25368970bbFCA1A10916D8b14C5728B0B9895b",
      "txHash": "0xe316c01f0447528434b0230f079b8822f30fd5c4306a97753f9d3a903190950f",
      "kind": "transparent"
    },
    {
      "address": "0x23280a97651d6e33dd99F0Cc049740342e41B83c",
      "txHash": "0xe2b5423a5fac20abe260790e4f1a49e7401bafa2829d3cdda3c28621a5eac0b5",
      "kind": "transparent"
    },
    {
      "address": "0x50EA81aA327Da8A77e8E03D9c181e778F7283f5C",
      "txHash": "0x961688e430788e68feacb8aac97753530e1f27ce4b3d7e722b4478ffabcdf87f",
      "kind": "transparent"
    },
    {
      "address": "0x7dfED4C36f7e6a7C2E648f5136FD7C29D8a2579D",
      "txHash": "0xf3c4c1a2579a068c2c5181095f9b6dacfec5b3100a094136a7ef494b9b171f10",
      "kind": "transparent"
    },
    {
      "address": "0x013004Fd2650dd93cA9409494e52846CD11b7914",
      "txHash": "0xc9890eeae3ea665883b85b52438ee09d1e75741200f0c39d2ed2eadab59a002b",
      "kind": "transparent"
    },
    {
      "address": "0x4Fd18D5546f822F51E712ee9028B6975BC912C24",
      "txHash": "0x2c33739a094005d858cf41f3afab9d6967ff5ce31d509e4a529750875cdf45ff",
      "kind": "transparent"
    },
    {
      "address": "0xB9E3B14E55339b9D8Ce31FBe5375267E847587Ab",
      "txHash": "0x7db2ecd9d9200c4e4ba15f47ed80a1ca18e2faa75b1b55ff73e32ea9cc7b248b",
      "kind": "transparent"
    },
    {
      "address": "0x9cf8f46DF7e99E4D3921F69bDCccfa579865993d",
      "txHash": "0xd303b9fa31f229f1b597fad83e2d49c93e0d55ae1dd4ac57afc633cf2d617b24",
      "kind": "transparent"
    },
    {
      "address": "0xe57248E9073cd0961CCF6e7b775424B6529F7f62",
      "txHash": "0x0d7ccd07763a59fb85606c4efbb0e06fcab51615e46709751a6a55067f2af446",
      "kind": "transparent"
    },
    {
      "address": "0xCcFE2287DD8B0F5F4C646C98562cd898478B09F5",
      "txHash": "0x5b028a3d19130529df5dd81ed08446321168ab8a67fd236b8a296ac0d50b7772",
      "kind": "transparent"
    },
    {
      "address": "0x52E27e2eEEFC02Fab075a995b437C430b62b7016",
      "txHash": "0xa156f6ecf3ae1e232f803b9dc8be13b7e8b906b2cfa56762b44c5af1227801a5",
      "kind": "transparent"
    },
    {
      "address": "0xd1604625BEfB912e603285f9d3330fae073a3D0D",
      "txHash": "0x2668d7b19a142128d856ada70da1afe7c492e8336e1900eb5473c00c8590c9d8",
      "kind": "transparent"
    },
    {
      "address": "0x2DE3Cc1469f3c0fd91793fCb31eF43A8CAe02f92",
      "txHash": "0x61a1f1d35249e15899c88edf2729978111b6171cf84abeb6f5af4fe0b7a19b6e",
      "kind": "transparent"
    },
    {
      "address": "0x65D10B4cdd362473a0d0bb6a1ae6D3308bbE7A12",
      "txHash": "0xfafb8c9e0a4dc2d9733b02a72b5fdb65993a738d0d16f935ce7c6e1adef1cff1",
      "kind": "transparent"
    },
    {
      "address": "0x301e4E8fa958a95C7B7175993Cd9FF0f9D4fCe33",
      "txHash": "0x1e14d8ae734a3854578f34c7ca3489f39256298b6bba38048167401e2cf9776e",
      "kind": "transparent"
    },
    {
      "address": "0x14ce52aD88643c9139657246AB7d94725796Db58",
      "txHash": "0x33ce64557d6406af2e1fa1cdc211b10f8d0f63c99356461765e0a16a0777136a",
      "kind": "transparent"
    },
    {
      "address": "0xAE63b41d5b3c82A09473A98c8FED836ceD0E1a72",
      "txHash": "0xfedfea07774f2090263f48fdbae8b9544932dff4694372cf8c3ba6aafa61754b",
      "kind": "transparent"
    },
    {
      "address": "0x1Ae037104B8896f630C5e583A2a2C2BD488c89AE",
      "txHash": "0x7714e51d2d62ca969d407bf6a889118a1578add73e6daa4ba5a109460b347d69",
      "kind": "transparent"
    },
    {
      "address": "0xc7B50aB7d8F592a9bD2Fe5b8f0503529c3Bb4748",
      "txHash": "0x117a00acf31e3e9b6587b13b26e355614572021c5ebabeff5ef9a826501e74a2",
      "kind": "transparent"
    },
    {
      "address": "0xA3c0f784eb5194cc7b2fb0A61e98b058B7EFa473",
      "txHash": "0x9641ecc7f62d8cad4787f5ad0d5a371cf52ab9bb1cc46eb659e9e9baf22c8673",
      "kind": "transparent"
    },
    {
      "address": "0x273B85C48700AD9aafe3eAd53Ca4c23D59E3EbE6",
      "txHash": "0x82a9d14422199c8742f104b29875d494cca37257657c6197591d053d1d71dc83",
      "kind": "transparent"
    },
    {
      "address": "0xCE786E92D9b751F4E2784F75A59e663fA5410436",
      "txHash": "0x653d9be281b339a817c33e7cea001ae35462c9410a2de77baba88e763386038a",
      "kind": "transparent"
    },
    {
      "address": "0xc631548A763ea2D274142704157205a20beD1DDd",
      "txHash": "0xee336f44749a0751ae9b711b85c3b682a99c43e0243a7830c2668c3c296516d0",
      "kind": "transparent"
    },
    {
      "address": "0x40E71Ca3835bAC316Ea23bFdD472B6137EF302C4",
      "txHash": "0xef04bd53c252e3a874a2b4e40abcedddc0dd7c5de986c5dd178723473d1d4949",
      "kind": "transparent"
    },
    {
      "address": "0x24fE458620923520bcA6019e5c7aa53e3980B809",
      "txHash": "0x438a8e3281454e746f70aa7205b2d712862aadb1847f686e51258a5680ab8741",
      "kind": "transparent"
    },
    {
      "address": "0x24a7DeF89de7Af92C3D49C7Caf54A6A548c90620",
      "txHash": "0xd0f0427fe887ae1b3401f591d672b06d5dc155c77292c8abd99407249438d526",
      "kind": "transparent"
    },
    {
      "address": "0x673a94B546D8A98Aa43A115180D447e345DE3bfD",
      "txHash": "0xf6adb806e725a53410bc32e5b5e7e50333e9e23ebfe4994b4425581431a2057d",
      "kind": "transparent"
    },
    {
      "address": "0xBCc6DCe4551b5567968fb2b4a1E94A64E674829B",
      "txHash": "0xbdd91ce7b9a919655622f8d4687a42f5f63a74ae6f473ecca4962ddd6f66d39e",
      "kind": "transparent"
    },
    {
      "address": "0xC06f930C7826089e53D39D261484Fa553bd9e355",
      "txHash": "0xb2c55241baacbc988bba9a0d624b33ee1f77f59f079ba4bfac735f32171c9a43",
      "kind": "transparent"
    },
    {
      "address": "0x1825f4e08b44548BE23c566f2a0f822d7C7A749F",
      "txHash": "0x5a6c5adcedc349634858c06b34215016c373bb633db23ccdc926cb448db9edb2",
      "kind": "transparent"
    },
    {
      "address": "0x0000B8a151C4948f241034798781C9d509310fEc",
      "txHash": "0x3afc145038adfc74ec21982c5eb9a31ce402922ba719fd532246ca3f690a3833",
      "kind": "transparent"
    },
    {
      "address": "0xcFf229547E8894a3061A414A0C17579097bbD3dC",
      "txHash": "0x0de55b4c826273577fdd5d573c0c0c0f02949c56a11278783be5f9fac921b47f",
      "kind": "transparent"
    },
    {
      "address": "0xdD6abbCAef0C877B00bd8D57f7d28cD970e411C8",
      "txHash": "0xf3b8f85188a330f1c0c951fe6245ab5cb52daaefa28f3038312380ed34ea7879",
      "kind": "transparent"
    },
    {
      "address": "0xeA09fAD6912b2EDFcAF92B7285A9b33d9197D8a2",
      "txHash": "0xd4a3f39d0865227583bf2b8ff40b56072d348d57c021be2a4250e0e038caae9f",
      "kind": "transparent"
    },
    {
      "address": "0xA8d4B3F7b058Ae479c80c69B9b3B75825904EA9c",
      "txHash": "0xfecba393e328379876467680170afe97c3604a0ecdb368ac0457d8e7769e80fd",
      "kind": "transparent"
    },
    {
      "address": "0xf5C9c187E9befa9147bAAF0fb5AA0F8E31e145eC",
      "txHash": "0x208a7cb2fa52f54cd349e2f391dc63ce3e751431f0afb5729ffe7c09f21c57d4",
      "kind": "transparent"
    },
    {
      "address": "0x40e114d7B3225E2c0c1Ff6B8cfaBaA0727aF5CeB",
      "txHash": "0x032d914f998d8896df0ed7a346c87501fec90e06a2f0462caef6d20018020635",
      "kind": "transparent"
    },
    {
      "address": "0xc7Cc4ebF0c92265C831BebB46c85fE667A82CCFB",
      "txHash": "0xf3d6848f9c957ac48c7e1dae023548c369628e355ee88226d97870b12db72498",
      "kind": "transparent"
    },
    {
      "address": "0x33e0ac83D67bf16d5197d6A03F1c601113C64885",
      "txHash": "0x656f9b68bee1d6aeac465e92c2fad8f40537cb5038b0660d247569d1956d794a",
      "kind": "transparent"
    },
    {
      "address": "0xe1e7358E29aEd364E237a32AFB53bF2be20fdF0C",
      "txHash": "0x4f28a8de85ad60c23c8073b906a9a837f0f6164dc3b2a7731c3b2b96af12ed06",
      "kind": "transparent"
    },
    {
      "address": "0x68111D58fC1282E1dAf4ABf942FeC6590266eFbF",
      "txHash": "0x67968ffe79110b5dc551153a2bd51954de6cb85853ae7ade4163eb3ff7f8c979",
      "kind": "transparent"
    },
    {
      "address": "0x61D5dD28440147c2966b665A5D13b2D76e55a318",
      "txHash": "0x342d0ba5df0d17ad91c91ec1bb39ad7e3dff5def7de29f24655b4c34a311aff1",
      "kind": "transparent"
    },
    {
      "address": "0xFa4FcC3616d30b86305f80c93149EEe975D75D43",
      "txHash": "0xa78187582d9066accc66baefbed39bc70530e5c4f3337c3b0029719d555b1c82",
      "kind": "transparent"
    },
    {
      "address": "0x9dd6a8cFC06B6e1afF34fe034dFF008F8d7B363D",
      "txHash": "0xf0e6a18d4f998488fe5d9084e04cb8efa16889d29aba189aa12fe3c9fe60ebf7",
      "kind": "transparent"
    },
    {
      "address": "0x73602eA4CC40e1Bc78A32346F197c9C4cd2Cf59d",
      "txHash": "0xd712a0d082a76d9d10bca1e53826e24f564cdfedd671bca29155b6ddd0bcce4d",
      "kind": "transparent"
    },
    {
      "address": "0xf0925EC4De5EaB05b528684593a703Cd8bF1C90D",
      "txHash": "0x4749e4ee0b14b36509cb266ff23b2ef8e88a72f18f2884d9766dc1efd8bf55cc",
      "kind": "transparent"
    },
    {
      "address": "0xd4C7FAC976702864EEe2aED990FF5a1bf90F707b",
      "txHash": "0x65bbe13d0d941d2fcb60a12c11c24f7639ea34c23fe6614ba0e22863ea904b9f",
      "kind": "transparent"
    },
    {
      "address": "0x4b6d290a0AE80Ec0e46dbf01bC44c4c4a0383bD5",
      "txHash": "0x79fddf2d633ab7e75c5b41ed86b02e8242e806a92e7b9a4b71a3d7a13806642e",
      "kind": "transparent"
    },
    {
      "address": "0x52a5b24D18259A8982c3231c4B7fCD007d738f15",
      "txHash": "0x3d4620e0be1ce6e68ad52660d68cf77562925b0ed7576506a69ae9d1b0036048",
      "kind": "transparent"
    },
    {
      "address": "0x28f6DD60EBedF1d60199afd426b4a1CC0365CA79",
      "txHash": "0xc4be1c4d3437d37b6874dd37c3a0a389c86e6f4b97cde8927343157062e0a94c",
      "kind": "transparent"
    },
    {
      "address": "0x7c1f0E5cF6e1264a4aEa115E1FC4c3E8ED5abF88",
      "txHash": "0x1b958195ffee66b581e3a2d2e398a3d2d731840bb79de49607ea3c9e8d1be082",
      "kind": "transparent"
    },
    {
      "address": "0x52b5Aa895FeAA68F6b0f62Bf9ae911C255886634",
      "txHash": "0x539e34be128934699a8d02f0a2af85dda9fa57285cd64e1d44058340c9aa9666",
      "kind": "transparent"
    },
    {
      "address": "0xAE00f7479625B54E9f2F0f6806cbf10e9629fe35",
      "txHash": "0xfd35d673cf16a12c2458ee4e35f0304e6242a138645a392a01467589395da1f1",
      "kind": "transparent"
    },
    {
      "address": "0xf6f13a171f110D98085518a3B5D9D9C9ab7b612f",
      "txHash": "0xdde8056214ecec13be8a3959bd578f42dd2cf3ffa3df36703d75908dd61ddc63",
      "kind": "transparent"
    },
    {
      "address": "0xb4dDb6823F4756fE0e2C66f47a991b34158f7307",
      "txHash": "0x5d7763a86f198f72974fd8ff474ecbe065b57ce1d741692d4ebf3a8813597eb0",
      "kind": "transparent"
    },
    {
      "address": "0xD53644D73D1114E5940C28DeC4B0842127Aea8bF",
      "txHash": "0x3002cfde8af2e2f8c7d1b43fc90b44c8ec0da7e18933ecd5301b498938adf1ed",
      "kind": "transparent"
    },
    {
      "address": "0xe6b2B76B35FA197A0Aeae195A7c1aC2a5320C873",
      "txHash": "0x9ce21296babcd11979721fcbbb5080480db98c444578477ffd84b694c6305322",
      "kind": "transparent"
    },
    {
      "address": "0x218aEA82B29D14de64f12eEf1320f6E06C64ED34",
      "txHash": "0xdb8d951a18896bfb2116d09a94755fb04f0c3685733b36e57e5138cedf6b688a",
      "kind": "transparent"
    },
    {
      "address": "0x3b91F1A0E2958E63FFb05Dd9A4a7FF03073A8803",
      "txHash": "0x6031d76547a646ecfaaa57d5e45261dd2cf940632e01e8b98a096ce071911dfc",
      "kind": "transparent"
    },
    {
      "address": "0x3699328c22442c5e9f0dEC80be58C7Ca7d39D919",
      "txHash": "0xbcdd962ad4c202f7d9c64ab4a7552f6b682c582f495a3d08c11f0b8eaf83c0d7",
      "kind": "transparent"
    },
    {
      "address": "0x641051544e5Ac5E1F5821e155930c81d37518F9b",
      "txHash": "0xa2dfcc72da5a51a9b5dc1c17b1c63fddcb611cfc446b7e3a0b406caf8db87320",
      "kind": "transparent"
    },
    {
      "address": "0x48d4873C649fe67359E5E1E6D6dA26079D7e52c1",
      "txHash": "0xe4890fd3ddf1f0428f739af4d5ec20f97872c7a55e55034c62cdd6b6d4c2aaf7",
      "kind": "transparent"
    },
    {
      "address": "0x8cf807809F6e954b4873EbdFd296FDeDaF3cE5cA",
      "txHash": "0xe8c35e6ffd09304c8fd01c803be1beac06460f3d9cfa5d7a05ebd9eff1e3df4d",
      "kind": "transparent"
    },
    {
      "address": "0xa1F43253f0E274697D11c057E154ED28AD6B919E",
      "txHash": "0x4b0a32f8c8037bf7748c19125390989d59d7bb3f40ec7d2f2fe48115be123837",
      "kind": "transparent"
    },
    {
      "address": "0x8fDaCCF2f794DA0f64d9139e33CF0ccCB007830c",
      "txHash": "0x33112f7dc6cb08f5e2ab29eeecde80dc2c37b86207b4e549929b44a40c397ceb",
      "kind": "transparent"
    },
    {
      "address": "0x41454afaAfFc8Bb4f88aEE3E6D2E1FF6e11cB132",
      "txHash": "0x85bb06e1c962fbd904481279feae02e4e61ef01d2e941a0bc666c4caa75df972",
      "kind": "transparent"
    },
    {
      "address": "0x5935F31bc8d219dC507086d1FD501D27e910bD88",
      "txHash": "0xdd47a945f1dec8b3d4c28bfd9df610875744d78f2b82e4406e4dd014c4406fdd",
      "kind": "transparent"
    },
    {
      "address": "0x3E41F2Df95b0617cA1a1E2c0Bb03cE2d5415675E",
      "txHash": "0x11bbe3ee8ab0ff25553cc3a366a056a23ac76da052933c91241b43428645cb55",
      "kind": "transparent"
    },
    {
      "address": "0x15811c48a1AC13BBd25FF4D2eEC7CDC8cc2c1e70",
      "txHash": "0xd77f0dae84e5488a8c7760821fc0c4e995aba1481b9691ef2412c98cc0c32f6f",
      "kind": "transparent"
    },
    {
      "address": "0xe019B12156a7BA5B98f89094b7541751d33B64E8",
      "txHash": "0x0e778b05ca7a62772b49649bb6c3c8226ff8f3cd017c0fa8ff6fd1936e806c24",
      "kind": "transparent"
    },
    {
      "address": "0x306Ad274602207c7E47a0469B94B6179aC3C2309",
      "txHash": "0x656c96ae0d9b905d35f5749a343bbfebd03b230a73d4750bed9ba34c4dfaeb76",
      "kind": "transparent"
    },
    {
      "address": "0x40064eb5BC8247E2c86F2c93D6a4fc7Cf820D3Df",
      "txHash": "0x111935872f2a300baf9f6807107ed7b1c234f5e2a91969a01720b8d68f9fec8d",
      "kind": "transparent"
    },
    {
      "address": "0x5d07B59EA078adC03cb5356F2a091ACF6d37A1c8",
      "txHash": "0x958df9673fd2fe4742bc23df286ec3dacc304624aee33805d1ee98ce40965a8e",
      "kind": "transparent"
    },
    {
      "address": "0x0ABCf1bD926F8760AF3bdBcfB6Df0cc4de75890e",
      "txHash": "0x5bb218d766de7bb0ce27ea054f8b9bfb206804219d9cedf440de8c9a49c01742",
      "kind": "transparent"
    },
    {
      "address": "0x61655400012B31d36fE2AFA9eE6E526ac8219E3C",
      "txHash": "0x409e8d04def190422d8ce921c19252251e2bb70768d3c99ef50a9aea301074b4",
      "kind": "transparent"
    },
    {
      "address": "0xD479EaA019746dE7e1230Def66Dd02E46C98E141",
      "txHash": "0x3406baa058e5653da42115718f1b23d4af93da7ab6c4424d6b40b790a45ca984",
      "kind": "transparent"
    },
    {
      "address": "0x40cca6cC793f47c4def35ED5d38a004380626dF8",
      "txHash": "0x05bf5084fdde2a594606927cb9e382d88f285eef2c527c9ed9584242110f39f8",
      "kind": "transparent"
    },
    {
      "address": "0x9469bC3D94352C8aD53e18FCc73a1619367d7f16",
      "txHash": "0xb6413dd0e9529c41387c16ad3776ad3e1ff375accce372606c5f99e2e2dce07e",
      "kind": "transparent"
    },
    {
      "address": "0x5361a04f24C02DA4cBF629A75505D3598D3A3fDB",
      "txHash": "0x8bb2395193109946b633a6c03cb7497b3a25271039959db36252489090cbcfac",
      "kind": "transparent"
    },
    {
      "address": "0xbb9a52dba9Ae14706E1E4b38F034a3Bf725aE0b9",
      "txHash": "0x462027ecf80ad368836587b1f4f07b23579d856744e23ba3d45265d755a1174f",
      "kind": "transparent"
    },
    {
      "address": "0x1fE761FcBa80bfF7e968c6aC1da3cb3143526D1b",
      "txHash": "0xeba67f625edc34b23220bdcc459b07ffecbb60486d6127e62a24d1eb0197d5f6",
      "kind": "transparent"
    },
    {
      "address": "0x55ef9F156f33fC940378e6688051554Cc443aa30",
      "txHash": "0x0f02743e056d9efd437dda3918fdbc97a5f1e7796014185f2c8da0f3a429d668",
      "kind": "transparent"
    },
    {
      "address": "0x77e2201cDE2543de6e555963677591EC528e38F5",
      "txHash": "0x7ca7d6a2d271777d3d310f4e3a8524823c60a0abb29484d541bc6b31726892f4",
      "kind": "transparent"
    },
    {
      "address": "0x7ec9bc827104D08eCB8AA057c2c6998BdF470Abc",
      "txHash": "0x60375a4e822ec0840dc4f44924933b3b4f7595e1f42ff496a2eb3ca281c9e4e5",
      "kind": "transparent"
    },
    {
      "address": "0x4577E83f40318A8DE4B6Bcf6bdC95f414A4331BE",
      "txHash": "0x70989e2d6e5417fa191f44583bff5e2c7eae0b78a062b912129083792c6401ae",
      "kind": "transparent"
    },
    {
      "address": "0x9E6dE5ba3147B356aa3C5d696A3ef049f93F329A",
      "txHash": "0xb1a64dc8fa24af1067289704e908797f042962f7748c830c8d965d9923af8f34",
      "kind": "transparent"
    },
    {
      "address": "0xe5D7C5657f8EcDEFfC463B99D96e87986110A0A1",
      "txHash": "0x69437ca5098545e37ed57a22cdd1fe097c67a6c07e59d1e69db8534ca1ccf10e",
      "kind": "transparent"
    },
    {
      "address": "0x202c2FB71fDDe5dC7902b25b8a52fD0AFE1fC0a8",
      "txHash": "0x23c0eccfbcc82e0f1f11bf8d91e37a232806a589c183f414e67d118a532861ea",
      "kind": "transparent"
    },
    {
      "address": "0x0864621f028ADf9e333CBE1F302b08AC2Cae770c",
      "txHash": "0x75d18197368484d5809a24f6a2a4a5d74c278b6e0cf3a54a78fda0918d973af4",
      "kind": "transparent"
    },
    {
      "address": "0xbF0E64E3E19945215fC478AA441D487d7C3304dF",
      "txHash": "0x1319a681ea2731de21121ae66c021973ad88623d08b845e3d590bcaa32e6053c",
      "kind": "transparent"
    },
    {
      "address": "0x77508907AA55814B6B9D79AaDC481eB7ff79C3E1",
      "txHash": "0x43ae230f3f3b6221d165c78a9bcb031d42db28973fdc79fa4a4ba540de6ea061",
      "kind": "transparent"
    },
    {
      "address": "0xE73046D66A4545D76C7FE8d2b4Fb3A233a3f3aB9",
      "txHash": "0x48a8b079e9927afef43a5d548f37c275f1a0aae797266c6f5f5c8ddc4bcdc450",
      "kind": "transparent"
    },
    {
      "address": "0x8c7e864Ad49a72E157bB44903949E300F07A1754",
      "txHash": "0x936ec71d14dfabaf4ebf95ebcc1e9f39e70924c0242368bbb9bf67e1a4a17b6b",
      "kind": "transparent"
    },
    {
      "address": "0x095fD5e25CfE1D7D595FAA7F4f76Eba0c9488496",
      "txHash": "0x9043f4271f1c9c982d1cbdcee07335b1361a8ab77508ca91846061389f6ccb4d",
      "kind": "transparent"
    },
    {
      "address": "0x816a718Ef6A62209dd9491A8014670B7d8d2dab2",
      "txHash": "0xf6db478db554933919d059fa333c4f9727602e5e4ead2607a5bc83a647d05084",
      "kind": "transparent"
    },
    {
      "address": "0xb3e7394b9D46a7e96447ecFDdEc617Bb34C634bf",
      "txHash": "0x975dc36f8a0ad72205d6e4b4b599cc7eaa40d3590111a3e6972ed1bf3c0c5dcd",
      "kind": "transparent"
    },
    {
      "address": "0x5138231a1866b4ac8e300b595fEe7d30784Bb875",
      "txHash": "0xb2d8dc83f15f0a2145a49fc25dfb9409c64f4ac7c612be3d04fdadc2242fcc4c",
      "kind": "transparent"
    },
    {
      "address": "0x23715972EA03aC11ce6E95eb23C660f100A41f57",
      "txHash": "0x71892d71dc5bf9e564347134f43691488fae46a4aa30a3694d38b1741aadb435",
      "kind": "transparent"
    },
    {
      "address": "0x940427338075F35A9D6469FD523aF7c3dd18c1fB",
      "txHash": "0x351c88c886e3a5860c518dfc7d142ead56882835462c3040813536b4804612ca",
      "kind": "transparent"
    },
    {
      "address": "0xB432Cdf6cF2953d654C52F8362008745FE1f8203",
      "txHash": "0x2aeaf8828476bc10f370cf9cc18a5eac877779253a319104353e6d54a2c3f47b",
      "kind": "transparent"
    },
    {
      "address": "0x72CEC4fb133563d73CFb94803d00AfA4f6078c9e",
      "txHash": "0x9e971ea98bb15ce86554d01a4bf7ccc702bd014fca6f6830a794adb8708330f6",
      "kind": "transparent"
    },
    {
      "address": "0xf09E5A6fe59A0D049ef32eDca662EBaEcC654ad5",
      "txHash": "0x70bff73872be43257b4f9c4303c6d8f379e132bd0f2f258ee3b95588eb0eae5e",
      "kind": "transparent"
    },
    {
      "address": "0x911f0FBcb74F73bC39AC3e0E0D4d2173c2b67F57",
      "txHash": "0x3e29db1dea792e94b8ce56124aefc2af3b0342725bbc4091dd1bd3ef64ffe570",
      "kind": "transparent"
    },
    {
      "address": "0xd0bBF1E0E0f7BD7eD2fC06Ef218395a4d37feBA7",
      "txHash": "0xa7846de6a6462b587b6fb411853b12029086e0a247b46b1be3543fcfbc6128de",
      "kind": "transparent"
    },
    {
      "address": "0xb12Ba10c420161807e7CcF3aDd7B96a5F67Dc726",
      "txHash": "0x7888fe618650b1252fa30b49d2ac527124390402ebe3ea7609248230ea97cda2",
      "kind": "transparent"
    },
    {
      "address": "0x3dc3959b181fF7A71eD0E752492C46276049B9C8",
      "txHash": "0xea326e988576d716caec800e8be56c0e9f2f3915957e7ad4fd94dfbfd380a0c2",
      "kind": "transparent"
    },
    {
      "address": "0x9a50809AA4F3fE2d31c57838F8D750da1aff26E1",
      "txHash": "0xab8901e7e1bc42b2b1e9bf9bfcf07b0c3e64d20fea4a083388ffff5843641276",
      "kind": "transparent"
    },
    {
      "address": "0xd055f97629a22244434390f7c348146F82Cd8070",
      "txHash": "0xc3cdfdbd1509bcdc1035d4da579adb281a74dec2df78ed32bfc850eb87a8817c",
      "kind": "transparent"
    },
    {
      "address": "0x82eD19386D1CFc6f3520922043827c4A768aeA9C",
      "txHash": "0x30172b5d6af89025998a045bb71f98b1c0e5c99ae0bab00d88a189c00653c255",
      "kind": "transparent"
    },
    {
      "address": "0x5C578E64f3b1695f8acdb01E1e3c6B9e318D948D",
      "txHash": "0x99669ff9eff4463f6bc57308a9f2be0f13556c3a5b8e272b622de6ba4672998b",
      "kind": "transparent"
    },
    {
      "address": "0x11Ac7813CEb01A76b3CdDD4a5C20E10C91809Bf3",
      "txHash": "0x8196e1cc973c540d7a85006e205fe3f1c7ea7e01fd74333189d11617908838ee",
      "kind": "transparent"
    },
    {
      "address": "0xf0cF92900bCAafCEF32fc00cA616296a6785995B",
      "txHash": "0xbb6223c55a141c28a3e260d8fa9df24ab53b8a7f27149ffc9b12a8fbdd47af63",
      "kind": "transparent"
    },
    {
      "address": "0xfEf30a5d9095e124C4CeAf105cEC42f599e22F67",
      "txHash": "0xb3aa21e89c8af7048ecd7fcca5ce0f81d120715271d59dee34a95c112bda7b00",
      "kind": "transparent"
    },
    {
      "address": "0xc8755b21E09acF81453eece131DC3E5b024F1037",
      "txHash": "0x13f5cf3ebac53b2fadf408d3a68a2923d97f58ad30c9b0939203f4fe9ee3697f",
      "kind": "transparent"
    },
    {
      "address": "0x02a42c16dD7928cA8Ac966F11F72eC6A2d8d8df0",
      "txHash": "0xe9656e277cf8e77cede2b3ef05cf90c21a5b977e3590a2042ae85e0836dd6210",
      "kind": "transparent"
    },
    {
      "address": "0x3335F5D2BdE33D2ca9a5f76D456EeCDc6BCACa4f",
      "txHash": "0x2a4783acc05ea7b8a4a5833a0febf439b657a5f5c82724f292ca5ce28ad37311",
      "kind": "transparent"
    },
    {
      "address": "0x2C8CF4D49B2FC42EDD3f22133Cb4BF60b16cD767",
      "txHash": "0x3d02834f19573ceb4cf14523ea65aa6a09b19d6867d219cfb9070254743778ee",
      "kind": "transparent"
    },
    {
      "address": "0xe95342904fa0A1C29D35bC449721c6d613CdD085",
      "txHash": "0x2a783d1053360755f213de4390ab3c7a0e82067195da72658063f22a1c77a79f",
      "kind": "transparent"
    },
    {
      "address": "0x30507a52957C9379ec2186cb05E573518Ee8971E",
      "txHash": "0xea27237b9f2902d8c616dbc4e3b760bc99d588d950014302d020f7dc53af79eb",
      "kind": "transparent"
    },
    {
      "address": "0x754FDC3851E292f90a1B38E3f9C61C5E638Bc794",
      "txHash": "0xf49b869b0d118c2e90c70870ac90b33efc099a327918c1c13ffe3005ad2c51b3",
      "kind": "transparent"
    },
    {
      "address": "0x4E33EceD527B59e61e55d730717A50316505268C",
      "txHash": "0x68f758e9418edf0302cf043561d6f375f25d07c9efe26745da6310634dfddefb",
      "kind": "transparent"
    },
    {
      "address": "0xC69C6e92fF7A3444156d32941DeB27C7799a7A9D",
      "txHash": "0x724b5e8c97e566f2507e9ba5030b7de58a53283a7dd8a4f93ef14878e33281c6",
      "kind": "transparent"
    },
    {
      "address": "0x97896B3758Ee1a8E7c3bFef3D2391Fdb4489B34A",
      "txHash": "0xef287cff774f1112d681bc9727a3d217c12fa2702b3b0ed079a535d86344fe77",
      "kind": "transparent"
    },
    {
      "address": "0x7254F33DE3319E675792f0e89f7ea94323cF160f",
      "txHash": "0xc684c21c3f80768b24e77bf86a94308be66b8deb70ada67ef8be297438e6e8e5",
      "kind": "transparent"
    },
    {
      "address": "0x4868480529F795B30dccc67946121A7C2d0A1c79",
      "txHash": "0x138eef9e7a6a9761b7cdcddfd86cd26b8d1f23a42ed3c2fcc8f4edbde0cf5aa9",
      "kind": "transparent"
    },
    {
      "address": "0xC5aF76ed6EE0Ed215dB249cc485031cc62e58694",
      "txHash": "0xa7be74c0aa3f42ac9c02023156fd0d15e73997614cba8a3d8fc85ef18dca66a1",
      "kind": "transparent"
    },
    {
      "address": "0x36Aef04C2f233B533cF5F5d1749697863362Bb83",
      "txHash": "0x3f0fa0d3ce6505e0abe0351b9012a3b71b5a6ae15af42c6f4660a0e52bf9c1fc",
      "kind": "transparent"
    },
    {
      "address": "0xA86a2434469b1Ac20dE42414213CA9b6Fc21Fef8",
      "txHash": "0x06cb1407cf18e6dc3b028f04be47efd789b770e600f76caf1d13a58ef5d8020c",
      "kind": "transparent"
    },
    {
      "address": "0xd8c42E3a414C41c83198Fd26FC8435644B89a74f",
      "txHash": "0x1940a97f39f7cb291cf9e48ead88bb38d1f053f91c723746cc70f7edb0ccce82",
      "kind": "transparent"
    },
    {
      "address": "0xd8eC7cC56561c21e4EabB11e5e6d408317fb8D82",
      "txHash": "0xb67a2809c2fb15e3814a55d7cb34f689445ac647e4fb0fbda9707d14fd308175",
      "kind": "transparent"
    },
    {
      "address": "0x4B0eF71103E4791028Be33Ff1c72CaE08DD8AA9f",
      "txHash": "0x98882ea3e937948e04513100dac7ea89277cb34c36fe2dafc0c11f99136b5599",
      "kind": "transparent"
    },
    {
      "address": "0x4ceB5379085A49f0655b756260Cac106c1DB86BC",
      "txHash": "0xbb83c2aae2645eaf041d4018be001d6249047fdf36347ad5317277f8486ecaf6",
      "kind": "transparent"
    },
    {
      "address": "0x29BEa02b5d83e9108D88425791Fec1ca93d85F7d",
      "txHash": "0x97ac188cd879f3d86bb464cfc1ab2c5ba642ac1353bf94a2955ef1e926cc4c98",
      "kind": "transparent"
    },
    {
      "address": "0x962fdF08AA98b5692aA74F00Bcd1222f6F30A9B2",
      "txHash": "0xed2f8da14775e35a34e5b5cc985481cfaed0a887c8eb5bc34a60ba5996109e9c",
      "kind": "transparent"
    },
    {
      "address": "0xbdD01C944577A7B8e4da2761bc480391F7b5671d",
      "txHash": "0xa1f5ac406610589b4d87ebf6e509d6bc68ef3e459481767f0dfc68592f6522b3",
      "kind": "transparent"
    },
    {
      "address": "0xd75bB227aA0848bCC733b9AB9b5BedDD9F75fc55",
      "txHash": "0x32165f17adb4f3a3b2881252c385ddef5efa0a29dd9667de6ed1d6ecd88bb6a9",
      "kind": "transparent"
    },
    {
      "address": "0x9EA692c5128E1030AaFc58c5A97bd16B391b6f34",
      "txHash": "0xd5e5eacd5a810d621569dff521b2d4e5047cd0af876793e51a25c51c97c2cf4a",
      "kind": "transparent"
    },
    {
      "address": "0x5a83B3c106F4ee8EA65054155F814f17f4716Aa8",
      "txHash": "0xb33e5ca863418ce376fbdf15b30d1225b3ca7f0ec221ad24d02840ef38a17729",
      "kind": "transparent"
    },
    {
      "address": "0x60705Ea13beD9b3C72C81Fab7a631cDeE81928A3",
      "txHash": "0xa26f1dcdeb310957abcc5f772b95866f1e3cbde50a96bbb2128bfbe87b241e53",
      "kind": "transparent"
    },
    {
      "address": "0xDd56fDef1Be0e8c4eC938e602eB1DaF40bd72bb8",
      "txHash": "0x5ea823d3f2eedbf9013a7943eddcdfbc1d0779dd354422214d57a02943fc27de",
      "kind": "transparent"
    },
    {
      "address": "0x3299eF45a88dFe21E0C2ff9F8a7a18CB43fF82a3",
      "txHash": "0x6b5aabf9796c1378fed40860fbabf7d4de1738b176f99c622ec559c77c842751",
      "kind": "transparent"
    },
    {
      "address": "0x8d65B003a085747b1973A579e489eEED651dB0cc",
      "txHash": "0xd68bf109afd8d367f052957de90d08441a7bfa7af30ad2989c2f80d1a2b53449",
      "kind": "transparent"
    },
    {
      "address": "0xfeAf57fBF735903Ae13BddfcF88C3C2c419aD74e",
      "txHash": "0x9aee16d419daaec480f72ae27f6a5770d6f55c2d38e0cece2be0ba3162f37a66",
      "kind": "transparent"
    },
    {
      "address": "0xEDB7a7DD7b9C684c339936D54259235Bce99f437",
      "txHash": "0x563dd54a609de329446a8e77385f4f6f04d80bf7eee79b01a58d31c2d577186f",
      "kind": "transparent"
    },
    {
      "address": "0x134A5b42e07c8b169eBe7AA900aa5DB04c97a884",
      "txHash": "0xcb4a9bc3f663be12b83fef051bae995f2d655192a7a742081e13751ab58e8cd1",
      "kind": "transparent"
    },
    {
      "address": "0x095d28de8A1cF0B94E8476022B79783a5d4ec723",
      "txHash": "0x01ef6d8625a8f9959ed077d2cde64dafffd7d79aba08bc83d1a31d99caf81bfc",
      "kind": "transparent"
    },
    {
      "address": "0xD45Af5e7b497C5bbFc3F0Cb04a3f71fBEa9f2827",
      "txHash": "0x109707b9cf9db8db52e1feacdf72bb33cab4296901ffaf03f53b5e84286c1dae",
      "kind": "transparent"
    },
    {
      "address": "0x44F507B08805f4222954229B1d267125d30cEB70",
      "txHash": "0x3f686b188b56a4b4509c8f537b4df0dc815dfe806d9ec63b239e206160546d6a",
      "kind": "transparent"
    },
    {
      "address": "0xFB86e53A257b8A0127d0FcB18C0D3cf64fC43635",
      "txHash": "0xd0633f88379953ea723ee954ced74dd2db4f38a10fb8dc10a799ae0cf2a6c10a",
      "kind": "transparent"
    },
    {
      "address": "0xda2180a7f58741C1e793fE639E7b870272855F1A",
      "txHash": "0xe92d3131da0ca68d37c4b1e7eeffa7a6f64d14ea6046e15673c11a76c5d0b54f",
      "kind": "transparent"
    },
    {
      "address": "0xFc6BA6C7a35bb551D5744aca2d97EdaD14dB719e",
      "txHash": "0xf818447773f31fbad3062e508d7091b6e636dceedd7e22b1423fc0563bcae337",
      "kind": "transparent"
    },
    {
      "address": "0x4a21BD7c835eAD2E6782116249800F42564a0461",
      "txHash": "0x58e4792b7559b94331865eef28839427da54de7edb558b0a1dd584de38deaa18",
      "kind": "transparent"
    },
    {
      "address": "0x24F3FfFB70F58a4ce7F01634EfFc7f07e4770b3C",
      "txHash": "0x8271adbed26ca360e72e94dac760caa71a0aad0645dd0ea763f6b90086b587fb",
      "kind": "transparent"
    },
    {
      "address": "0xC070fA02027394ADE575D97DE4163304929D66C8",
      "txHash": "0x1eca914f1ccc562bde3bcb6306cd6973d2bbef4612c5d3d37e0facb2a6155fb8",
      "kind": "transparent"
    },
    {
      "address": "0x4395Efe10c56aB5230D61aA8BF5D526646055137",
      "txHash": "0x3821c1b4eab84e3caed6adfbf6fb18af3959fd20e05798d4409ef497dc06e3e2",
      "kind": "transparent"
    },
    {
      "address": "0xEa88C0397f6Ee1b6f9a1a667F5D091DA0ddb0E06",
      "txHash": "0x52a09ed791ae212d06ee1f57993e0542e8e8908d5fc8b3bfc7177f50e551c877",
      "kind": "transparent"
    },
    {
      "address": "0x1A00b71dF8Ece4516Faf225E0A42FAE7Bbbd74b6",
      "txHash": "0x8da7155a2da01b957698ec4cbdf78790ab2728da8cf7895a0c7f06f968fc20e5",
      "kind": "transparent"
    },
    {
      "address": "0x21B0FaA4963dE585c7d02D8EE66fD75B2496E2D7",
      "txHash": "0x4bfdcd3b281cdf5ac1c9a69971d3a121925d25da48b009297e172f37e71e0994",
      "kind": "transparent"
    },
    {
      "address": "0x113dC017b41C6811E0687015DA8dd28Ac53B605c",
      "txHash": "0x9f1e5f4f8f14b43ea6ce1b13c1ea2386675e5b7e0690f4a2bbe5c2af576c2618",
      "kind": "transparent"
    },
    {
      "address": "0xa0542B3d034a63A5594E561F0a4ADe2D428C6615",
      "txHash": "0xe1b787565157798cf53c268364a24b914439ebf06a0a6ba7e83dc40673661f17",
      "kind": "transparent"
    },
    {
      "address": "0x7bA0193d11ee9790f840A331057F52ae56745dc4",
      "txHash": "0xd29dc0720d6af0e224eb3c757f63c114fb8729d478924caade46c282e4690afb",
      "kind": "transparent"
    },
    {
      "address": "0xc57Ef337E3978444872A32acF2879574eb8bC1b8",
      "txHash": "0x5bf09dcd0d8daee7b6a3570f03cdd66ab043bd6ca947744280f2c7a651e33c94",
      "kind": "transparent"
    },
    {
      "address": "0xb4aa8497104aCeD73F606e795064880ACe3eDCc9",
      "txHash": "0x590aaf673b1f7cb6236bfff1b5a5617f5cee7debfd5d2597c043242c40612857",
      "kind": "transparent"
    },
    {
      "address": "0xA8DEC5c502f9dC69aEe4F91df839F7Ee4D4eAECA",
      "txHash": "0x974235e18ff10e645ccadde89027543694ca77ba5447b9653f3788c24c6af84c",
      "kind": "transparent"
    },
    {
      "address": "0x8952aa9a341996b202B3d5C047112156713Fd1a5",
      "txHash": "0x0ac37344fa028846a17c182a9392e65157450c49e01e9953a04ec1a4fd5e8fff",
      "kind": "transparent"
    },
    {
      "address": "0xede91494B60F32f9F01E257c84d896b5847EE17D",
      "txHash": "0x482dc7a9bc6bb001356b800a9cc3cb4f176f9bce9fc4f03031064d58cae83af0",
      "kind": "transparent"
    },
    {
      "address": "0x8ae2aDDc1f7d48DA1573eC09b0dE4F268c9546A9",
      "txHash": "0x626875da94b0487df140c9a16b09fa2eefd9fc4e79264a329c793b6e5b7d1c17",
      "kind": "transparent"
    },
    {
      "address": "0x0c55eC8Cc4509Bc08CB20F2F2e626e19734260D1",
      "txHash": "0x546858e71cc65b01297b1247c235d93768fce37491d7ff8e876c57c56b301f21",
      "kind": "transparent"
    },
    {
      "address": "0x1541a28BAd29a57A66BD064cC29ef496EEBC4137",
      "txHash": "0x9a59a752d0b3e331ad086dd22c66e282a6eb2556842d3748c34fcdc908b29ab4",
      "kind": "transparent"
    },
    {
      "address": "0x3A3079382F0a3F8256aC38CD1553E4cCe0a9fC5F",
      "txHash": "0x437342e90463be02d8ab96b3c061505e6a87e28bdac75d226f101f77e1663c84",
      "kind": "transparent"
    },
    {
      "address": "0x657D56A11676C7489d426Eee49954B03A57F28EB",
      "txHash": "0x5bccbe0222d132f14bc10cd5643f73dd2d0aa1ce2035bd4762a574d5c5f07837",
      "kind": "transparent"
    },
    {
      "address": "0xA2AD1B904aA286d8f39fB93882c6A917d041FFD2",
      "txHash": "0xf4f6fcad7e90656525d295302a9445949a79db83baab0e714cc49ce4b00f2569",
      "kind": "transparent"
    },
    {
      "address": "0x983f7018f17C66D6f955D18d5d3EcE351e62bd56",
      "txHash": "0x882fe089cd5c1fd1c49c97b62103540deb79127c9a83187073036b27282117c4",
      "kind": "transparent"
    },
    {
      "address": "0x8085f396332c351E6Fe47ACFb5ea657f23710F6A",
      "txHash": "0x7699b89755a3fd8c28940b178d6473ae5aa668c815de6cba968b5aedb78069a5",
      "kind": "transparent"
    },
    {
      "address": "0xF0279569c7c1fEe5C194fA4E388dd1D5b4CABf5F",
      "txHash": "0xf500ba4bc18609242c51d2ab339500b3a12852c88346ec17410885c3aad18cd3",
      "kind": "transparent"
    },
    {
      "address": "0x403032a096C18a41fed274dE38BE2Ec84b68b168",
      "txHash": "0xadfe7ce148d43f16edadf21c22b871aac75c780f59856d83ae08966bb0641589",
      "kind": "transparent"
    },
    {
      "address": "0xD2788F27C8e3DDe123316B7E3654d5E7854dD430",
      "txHash": "0x4173a0c72dca4021c4b87aefa2be18305364b5e4c106a65979a22d2bbbb44716",
      "kind": "transparent"
    },
    {
      "address": "0x6C94d9A1646459eCf71EFB47A4d90E3Ef405DB04",
      "txHash": "0xc5cdc9d78d634439a24b7008d10aac83fa0d7bd487d3af1f39c550ba11886733",
      "kind": "transparent"
    },
    {
      "address": "0x1B1cAbb81655E68E8727e34066d9a4E1dBC515f6",
      "txHash": "0x9949aefbc0760f40608545ef28c47cfeb90218fd18d7c5d8153b8cc12cf82cab",
      "kind": "transparent"
    },
    {
      "address": "0xDCFc96BA6f913B1C12BE666eC92E0Fb7B972Ad1A",
      "txHash": "0xe4a73029dac52c3822cdcfedb047ad3d85c988be33fcd2f54220de03caeef5a3",
      "kind": "transparent"
    },
    {
      "address": "0xAbbE5C0d4cfF6bA9Fcfa13b73394F2B739b93B38",
      "txHash": "0x4554114b46c0c8d2ab5e43ead4d68e54c271af40bfa3530c4c2887ae9acdfc03",
      "kind": "transparent"
    },
    {
      "address": "0x8e24DA3A9c3b304B40da10C805F14f6d63500371",
      "txHash": "0xdb3cbe34f0fb98a02fbf4acfdc07008a344e74453b0a3d7977347ba5ac65a660",
      "kind": "transparent"
    },
    {
      "address": "0xb7158A5D580e22aE2829cC5f1a764222cf86b4DC",
      "txHash": "0x596d652ce931ae3b3c5e725716d189d914b5d5cf3bd2993de82a4d91fd0fde9b",
      "kind": "transparent"
    },
    {
      "address": "0x431C88BA10ea7B2041975bAEEc8AaC79A5Bb3181",
      "txHash": "0x75b6307c7cbfe1571ee92092e3639b91d594c31f4e1232b998e1cdce4898686a",
      "kind": "transparent"
    },
    {
      "address": "0xe2Ba19BBC4120c1c1bD2AeC395D33D93A84304C7",
      "txHash": "0x4018672c99321051aa3ae4e6a88217444b81671756e0fd0c23757c15f8f950b6",
      "kind": "transparent"
    },
    {
      "address": "0x8C00B57629E18ed42049c0156f3777B561f3aAC2",
      "txHash": "0xc5f6eca2e36eac0880a8a9a8717aa54f0bc37645fa72a883172b638cf8915ca2",
      "kind": "transparent"
    },
    {
      "address": "0x63cf1eC1c9602189a27773c8fd2707cD90F38DCE",
      "txHash": "0xf4c682ccb7f718e6004d25dc07f4fbfc3e692d63c8900b87520c9cdb8f5ba071",
      "kind": "transparent"
    },
    {
      "address": "0xB3A1113f1e0F5Db43ebbBE347575fAD8E1F9F7f0",
      "txHash": "0xb332ccbf681b2b9ada9d39e50019b190102eb3b293b74956e4fb5acc7f933713",
      "kind": "transparent"
    },
    {
      "address": "0xF13b5DF48425Bd9f11C572b82784C2af8B9cd25F",
      "txHash": "0x638a93e904e59a2ecffe35afec8ee00ae322c6e3464ca9da9c5082cc9da324ed",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ab6941505f862d063545387f8946102f0e9fdbce8e2eddf33d4a81d44d3580dd": {
      "address": "0xd03EA07D83dFf65EfF8bbe46462D1c6f17D8e289",
      "txHash": "0xe51100c2b92351b31eff81d490c47c624b8a11a69416fc1d770ffbda2a107988",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "MutualityToken",
            "label": "value",
            "type": "t_uint256",
            "src": "contracts/MutualityToken.sol:8"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "63359ad7be0f2b7d51580250b3f809a16d37637086e9c68a650ff00d73e7c154": {
      "address": "0xFB37D4f4a1F727D0C1122C00eaCA2Edb0ca92140",
      "txHash": "0xcf77c4e711140633788d7a8a8208c361069c198454c602403455820f471b8571",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:24"
          },
          {
            "contract": "NetworkRegistry",
            "label": "free",
            "type": "t_bool",
            "src": "contracts/NetworkRegistry.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ceddd283ff5e8f9cb2326e8415b3e7f8066b9890cf3a5b2821991264bf95de43": {
      "address": "0xc11ef8939c0C938e65dEB2FcfbF671B0aa91B070",
      "txHash": "0x780424cac15ea0c8b19a4a23df11e15daffd87438b5e36bf296ee337d524c076",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1373_storage)",
            "src": "contracts/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2062",
            "src": "contracts/RUSD.sol:27"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2075",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenwal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:30"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2062": {
            "label": "contract NetworkRegistry"
          },
          "t_enum(Restriction)2075": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1373_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1373_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6a7e38a4543b37a6b92b9ed5cfae0d24d02f0b37b01c9f8d9b200cfbeceb6a4e": {
      "address": "0xe0B1103C705f019CCC8AEE670A6Ce0493862D2b6",
      "txHash": "0x54aacc6d653a1f7fdc3fe07882c659bfaa280e65eaa0f75c2db6d68236dd6134",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1373_storage)",
            "src": "contracts/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2065",
            "src": "contracts/RUSD.sol:27"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2078",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenwal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:30"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2065": {
            "label": "contract NetworkRegistry"
          },
          "t_enum(Restriction)2078": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1373_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1373_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d024e39dfdb6ff0f0b9bdde858f5b2a4c11212f6a2d19205cb65398139630bf4": {
      "address": "0x14b31B649f4899E63D7D8F5B08E5d107FB986Adc",
      "txHash": "0xeb3749639c5e8edb8c4aeebce73750bb3d0bcd78c64c0304641ec96caf1ad295",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1376_storage)",
            "src": "contracts/CIP36.sol:26"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2068",
            "src": "contracts/RUSD.sol:27"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2081",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenwal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:30"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2068": {
            "label": "contract NetworkRegistry"
          },
          "t_enum(Restriction)2081": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1376_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1376_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9115fa281a459e28795872bc2628c93abee00c703342c5dba4beb0216013718e": {
      "address": "0xC8204c9c6bC7742D75a21b50C3a24d92420E1F8d",
      "txHash": "0xf28b3639a804fc87235ae8bc5e390cb3c4b313409ce6c06b83238bffb0b3418b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1373_storage)",
            "src": "contracts/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2057",
            "src": "contracts/RUSD.sol:27"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2070",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenwal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:30"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2057": {
            "label": "contract NetworkRegistry"
          },
          "t_enum(Restriction)2070": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1373_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1373_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e16aa30b0d2d0a1dcfe17946244c2e731c6f47c05c14db9bc575de8e6b488816": {
      "address": "0x44E0BBe46f315D68a0098CD5D60E37Bc2d148669",
      "txHash": "0xf8ee325e5f5c9dbabf83656f921dae69fbda6fb7408b0955d3dc21e25631680d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1373_storage)",
            "src": "contracts/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2062",
            "src": "contracts/RUSD.sol:27"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2077",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenwal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:30"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2062": {
            "label": "contract NetworkRegistry"
          },
          "t_enum(Restriction)2077": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1373_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1373_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0143e2944c75ab10cf6223be0ba1691cb4303c25c16aa5e3d0e3164a756e873b": {
      "address": "0x0D07Bb0ED5502B5051e2c9391B8297b6F3D47D97",
      "txHash": "0xd67129e19e864961c8466638ffc6d1ae2ac725aa8b995e3631b76995a06f72c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1373_storage)",
            "src": "contracts/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2062",
            "src": "contracts/RUSD.sol:27"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2077",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenwal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:30"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2062": {
            "label": "contract NetworkRegistry"
          },
          "t_enum(Restriction)2077": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1373_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1373_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d7ce9876a81ad624956197411f8ee979d177358cc075174cbf85567cce48af8d": {
      "address": "0xDBdEc1381bda70008294d264fC98fDbCC933D092",
      "txHash": "0x061ee9e3a70260bd2e5854d60fe0ed18dcb9cd838e0c155c0e3ee903b7330303",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1373_storage)",
            "src": "contracts/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2065",
            "src": "contracts/RUSD.sol:27"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2080",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenwal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:30"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2065": {
            "label": "contract NetworkRegistry"
          },
          "t_enum(Restriction)2080": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1373_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1373_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9c3561ac655608117ee44c8fc25686e5d5c87d0f6e6b9fb8f5d75d27a5f05651": {
      "address": "0x73b475D0885886FeC2ec0240132E7dea86D15ae0",
      "txHash": "0xff88dbc02a04b8b95d22876b50426b93031ff9df7861a0efae48c153332d97ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:24"
          },
          {
            "contract": "NetworkRegistry",
            "label": "free",
            "type": "t_bool",
            "src": "contracts/NetworkRegistry.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c78518477cdad4ad90e1d145d31b5de235a00fd2b5e797fe7fb26c68a67c921": {
      "address": "0x765e15D718535515aE6540F11Fce9e21233f3C13",
      "txHash": "0xa23265ff4bfc0bdd270d6e99c92680d4543e37752c4fe8cb669ee95698bf2ffa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:24"
          },
          {
            "contract": "NetworkRegistry",
            "label": "free",
            "type": "t_bool",
            "src": "contracts/NetworkRegistry.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0d5f6009c2184688c74c8d61d5aa78a110cefeda73a435ab491b5e66f95ca04": {
      "address": "0xFC75454A825EFa75e5B66d4Ff80D555a76594D0F",
      "txHash": "0x6b50e03157fe5cd3a1c760ad00a94f525e03a5d1af105056720a4b09d0a295a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:24"
          },
          {
            "contract": "NetworkRegistry",
            "label": "free",
            "type": "t_bool",
            "src": "contracts/NetworkRegistry.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a9644809105d0345d6aef81c82b62fde95991d13a893a07208db42d9ed325b55": {
      "address": "0x18a262fbA7AeB6eEeB53a6E887C4A93addFc848C",
      "txHash": "0x73ac5accbb8968c9e760b5520715bc5afc375bc4397d98153ab248d9dd9ce6ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:24"
          },
          {
            "contract": "NetworkRegistry",
            "label": "free",
            "type": "t_bool",
            "src": "contracts/NetworkRegistry.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "149c1a28d7f9a5c6dd327ef64c141f6930fc21c8282061916411316fa007c924": {
      "address": "0x7Fc3C3f1C79f3CF16158D01Dcf684E26dd231D93",
      "txHash": "0xe034bb82d03d6f952c82f1a1718e6a2e34ed1ddb09972d0ea47fdc358e158019",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:24"
          },
          {
            "contract": "NetworkRegistry",
            "label": "free",
            "type": "t_bool",
            "src": "contracts/NetworkRegistry.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29eda03ae0b832b6cad373f5ba1e335217d48b48d0d40c2fb1d46e0af4685600": {
      "address": "0x7198a0b8C4dE06Bd4aEc1880931164aB04b4F0Be",
      "txHash": "0xb8ea43b688bd9f576089fc82a1a750745518cd98f05fbb2aad976be3737c31a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:20"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8d55f546e3c313c6799478c9d4662a035ec45791a092ff8bcbec901b11046ee5": {
      "address": "0x2517A831C04794F5013A5857c1659b861FFf2DAe",
      "txHash": "0xd1c75321599ff33f8ce6bf16fb49c2b7e38c9cc96105a04e2935f6b2950153f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "36381068d17d510fb1fafcd05b97853c1d421978b6eb0b8b7b55f84b4825e6b0": {
      "address": "0xb7959C3Cc6b5f7317082Bb16e514CA2b13799E14",
      "txHash": "0x344fc5f6f739e7d6a95e2f827fdd1a5489fb080573864d603527a5b3abea00e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2499",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2045",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2515",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2499": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2045": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2515": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "19e6db292c41ef5aa40ff6f262638a7eee615190c36d913d893cc9c62beb1d36": {
      "address": "0xcCaADB90c0fA7065Af4f66Fd5EC9cB7630931C89",
      "txHash": "0x9dc9336026e4c7aa3e42280579597f152bf1c7de7f537be681277b591dd32980",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2499",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2045",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2515",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2499": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2045": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2515": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7aec1491f3d18c7bafe7c1866f0043791924aaea647b8017b6b37f743b45ba99": {
      "address": "0xd127cdfC8FE8d77065B50bE2AB27f6fA8CAE4375",
      "txHash": "0x514e5ea874c7343ed47a0b82b4d680066ef5a0642daa66b21b4cc43047fe18ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2499",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2045",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2515",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2499": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2045": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2515": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6d5ca24e7a84e462f1c2316a428b36fe1d2b084b0a7e013fe55cb8fc635d148b": {
      "address": "0x1b391BA7B6933171daA654f4DADA0711FfDBe499",
      "txHash": "0x5762474371c8470c17aef24cb5716b3232b6e9c19e9289a7d7c0f86b07de8031",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2504",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2050",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2520",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2504": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2050": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2520": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6301209e2033d6b1f5987ba810d72199dfc295e3fda91e8b886c4093cf0e633e": {
      "address": "0x9C9624bD7585aC20B89C5C3862dfb744b0398378",
      "txHash": "0xeaec39d6066f94b7421e23c49c3e657ce50b17f862181202f64fa293e68d1bed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2499",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2045",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2515",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2499": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2045": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2515": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c51ba5bbc66ebf60cb85c5fe51119836c0752453cfeb85ce273fadc4aa727395": {
      "address": "0x662DC9a5fC288c3342F1771F8D58131890f1951e",
      "txHash": "0x194f6eef7387ee329689977a3982c917bfd2ab305a64227b67a8c870a501bbe7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2502",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2048",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2518",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2502": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2048": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2518": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c77f899882075837b5b11d1531b3dd868965aba2053a00c5ea505b28b707505e": {
      "address": "0xB70940c9C8bB526bC28cdfB1D2FD11E79eD50492",
      "txHash": "0x2110f78ae7d51ac4e3ae95aa9541783102af38e01345dd6928c6d99a568a350a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2502",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2048",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2518",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2502": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2048": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2518": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d781d9dd58611c9e114f1050b717ac78acdf6e09c6cdc61dae407c2f7ae679cc": {
      "address": "0x42891994A6AEF8b7f72e63E7a36E47aBbe5B8FFd",
      "txHash": "0x0b3fbdc8758301587f3f30af4babbe9d35d8b630dc091a58302e1b88b5087d6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2508",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2054",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2524",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2508": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2054": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2524": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9844a2d8ca0409e7517de8b764a0d0c813e676a8c1a50829bd43d370597f1fcc": {
      "address": "0x2b0f4e77EDB5735C52eE72F2653C457957d87342",
      "txHash": "0xb7e55875398f1286d5cbe1a2f33e6cdf68cf21760a47b49685b46192eb1fc758",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:25"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2517",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2060",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2533",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2517": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2060": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2533": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "af2c75262bfbc829671135df8048507eab3ed16fb399d5f28694af7903b424d6": {
      "address": "0x00b06e08CC53106e992f814858092dA76fb9937c",
      "txHash": "0x633408057e4351b746e2e2359d6096716f40d2ac212f7a8377239ae84efcaec3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1451_storage)",
            "src": "contracts/CIP36/CIP36.sol:30"
          },
          {
            "contract": "CIP36",
            "label": "underwriteManagerAddress",
            "type": "t_address",
            "src": "contracts/CIP36/CIP36.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2537",
            "src": "contracts/RUSD.sol:28"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)2080",
            "src": "contracts/RUSD.sol:29"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2551",
            "src": "contracts/RUSD.sol:31"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:32"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:33"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2537": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)2080": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)2551": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1451_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1451_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
