/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MutualityToken,
  MutualityTokenInterface,
} from "../MutualityToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063dd62ed3e14610251578063fe4b84df14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce91906114f9565b60405180910390f35b6100f160048036038101906100ec91906112d8565b61032f565b6040516100fe91906114de565b60405180910390f35b61010f61034d565b60405161011c919061163b565b60405180910390f35b61013f600480360381019061013a9190611289565b610357565b60405161014c91906114de565b60405180910390f35b61015d610458565b60405161016a9190611656565b60405180910390f35b61018d600480360381019061018891906112d8565b610461565b60405161019a91906114de565b60405180910390f35b6101bd60048036038101906101b89190611224565b61050d565b6040516101ca919061163b565b60405180910390f35b6101db610556565b6040516101e891906114f9565b60405180910390f35b61020b600480360381019061020691906112d8565b6105e8565b60405161021891906114de565b60405180910390f35b61023b600480360381019061023691906112d8565b6106dc565b60405161024891906114de565b60405180910390f35b61026b6004803603810190610266919061124d565b6106fa565b604051610278919061163b565b60405180910390f35b61029b60048036038101906102969190611314565b610781565b005b6060603680546102ac9061179f565b80601f01602080910402602001604051908101604052809291908181526020018280546102d89061179f565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c6108d9565b84846108e1565b6001905092915050565b6000603554905090565b6000610364848484610aac565b6000603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af6108d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561042f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104269061159b565b60405180910390fd5b61044c8561043b6108d9565b858461044791906116e3565b6108e1565b60019150509392505050565b60006012905090565b600061050361046e6108d9565b84846034600061047c6108d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104fe919061168d565b6108e1565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546105659061179f565b80601f01602080910402602001604051908101604052809291908181526020018280546105919061179f565b80156105de5780601f106105b3576101008083540402835291602001916105de565b820191906000526020600020905b8154815290600101906020018083116105c157829003601f168201915b5050505050905090565b600080603460006105f76108d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab906115fb565b60405180910390fd5b6106d16106bf6108d9565b8585846106cc91906116e3565b6108e1565b600191505092915050565b60006106f06106e96108d9565b8484610aac565b6001905092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060019054906101000a900460ff16806107a7575060008054906101000a900460ff16155b6107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd9061157b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610836576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108aa6040518060400160405280600981526020017f4d757475616c69747900000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f4d75000000000000000000000000000000000000000000000000000000000000815250610d2e565b6108b43383610e1b565b80156108d55760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610951576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610948906115db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b89061153b565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a9f919061163b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b13906115bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b839061151b565b60405180910390fd5b610b97838383610f70565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c159061155b565b60405180910390fd5b8181610c2a91906116e3565b603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cbc919061168d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d20919061163b565b60405180910390a350505050565b600060019054906101000a900460ff1680610d54575060008054906101000a900460ff16155b610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a9061157b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610de3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610deb610f75565b610df5838361104e565b8015610e165760008060016101000a81548160ff0219169083151502179055505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e829061161b565b60405180910390fd5b610e9760008383610f70565b8060356000828254610ea9919061168d565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eff919061168d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f64919061163b565b60405180910390a35050565b505050565b600060019054906101000a900460ff1680610f9b575060008054906101000a900460ff16155b610fda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd19061157b565b60405180910390fd5b60008060019054906101000a900460ff16159050801561102a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561104b5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611074575060008054906101000a900460ff16155b6110b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110aa9061157b565b60405180910390fd5b60008060019054906101000a900460ff161590508015611103576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8260369080519060200190611119929190611157565b508160379080519060200190611130929190611157565b5080156111525760008060016101000a81548160ff0219169083151502179055505b505050565b8280546111639061179f565b90600052602060002090601f01602090048101928261118557600085556111cc565b82601f1061119e57805160ff19168380011785556111cc565b828001600101855582156111cc579182015b828111156111cb5782518255916020019190600101906111b0565b5b5090506111d991906111dd565b5090565b5b808211156111f65760008160009055506001016111de565b5090565b60008135905061120981611ae1565b92915050565b60008135905061121e81611af8565b92915050565b60006020828403121561123657600080fd5b6000611244848285016111fa565b91505092915050565b6000806040838503121561126057600080fd5b600061126e858286016111fa565b925050602061127f858286016111fa565b9150509250929050565b60008060006060848603121561129e57600080fd5b60006112ac868287016111fa565b93505060206112bd868287016111fa565b92505060406112ce8682870161120f565b9150509250925092565b600080604083850312156112eb57600080fd5b60006112f9858286016111fa565b925050602061130a8582860161120f565b9150509250929050565b60006020828403121561132657600080fd5b60006113348482850161120f565b91505092915050565b61134681611729565b82525050565b600061135782611671565b611361818561167c565b935061137181856020860161176c565b61137a8161182f565b840191505092915050565b600061139260238361167c565b915061139d82611840565b604082019050919050565b60006113b560228361167c565b91506113c08261188f565b604082019050919050565b60006113d860268361167c565b91506113e3826118de565b604082019050919050565b60006113fb602e8361167c565b91506114068261192d565b604082019050919050565b600061141e60288361167c565b91506114298261197c565b604082019050919050565b600061144160258361167c565b915061144c826119cb565b604082019050919050565b600061146460248361167c565b915061146f82611a1a565b604082019050919050565b600061148760258361167c565b915061149282611a69565b604082019050919050565b60006114aa601f8361167c565b91506114b582611ab8565b602082019050919050565b6114c981611755565b82525050565b6114d88161175f565b82525050565b60006020820190506114f3600083018461133d565b92915050565b60006020820190508181036000830152611513818461134c565b905092915050565b6000602082019050818103600083015261153481611385565b9050919050565b60006020820190508181036000830152611554816113a8565b9050919050565b60006020820190508181036000830152611574816113cb565b9050919050565b60006020820190508181036000830152611594816113ee565b9050919050565b600060208201905081810360008301526115b481611411565b9050919050565b600060208201905081810360008301526115d481611434565b9050919050565b600060208201905081810360008301526115f481611457565b9050919050565b600060208201905081810360008301526116148161147a565b9050919050565b600060208201905081810360008301526116348161149d565b9050919050565b600060208201905061165060008301846114c0565b92915050565b600060208201905061166b60008301846114cf565b92915050565b600081519050919050565b600082825260208201905092915050565b600061169882611755565b91506116a383611755565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116d8576116d76117d1565b5b828201905092915050565b60006116ee82611755565b91506116f983611755565b92508282101561170c5761170b6117d1565b5b828203905092915050565b600061172282611735565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561178a57808201518184015260208101905061176f565b83811115611799576000848401525b50505050565b600060028204905060018216806117b757607f821691505b602082108114156117cb576117ca611800565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611aea81611717565b8114611af557600080fd5b50565b611b0181611755565b8114611b0c57600080fd5b5056fea26469706673582212200e3e6efee71546cd3fc4073a5fabf9b6db894dde075853bc662d65569ab2031c64736f6c63430008020033";

export class MutualityToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MutualityToken> {
    return super.deploy(overrides || {}) as Promise<MutualityToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MutualityToken {
    return super.attach(address) as MutualityToken;
  }
  connect(signer: Signer): MutualityToken__factory {
    return super.connect(signer) as MutualityToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MutualityTokenInterface {
    return new utils.Interface(_abi) as MutualityTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MutualityToken {
    return new Contract(address, _abi, signerOrProvider) as MutualityToken;
  }
}
