/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnderwriteManager,
  UnderwriteManagerInterface,
} from "../UnderwriteManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Underwrite",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawl",
    type: "event",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_networkTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "networkToken",
    outputs: [
      {
        internalType: "contract CIP36",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "underwritee",
        type: "address",
      },
    ],
    name: "underwrite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "underwritees",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "underwriterCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underwritee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "txAmount",
        type: "uint256",
      },
    ],
    name: "updateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "underwritee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b93806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80636ca95a4e11610097578063b2016bd411610066578063b2016bd41461024b578063b88a802f14610269578063c0c53b8b14610273578063f2fde38b1461028f576100f4565b80636ca95a4e146101e9578063715018a614610207578063761f7337146102115780638da5cb5b1461022d576100f4565b80631a399125116100d35780631a3991251461017557806322f3e2d41461019157806329c68dc1146101af57806351c76c70146101b9576100f4565b8062f714ce146100f95780630700037d1461011557806307630e1014610145575b600080fd5b610113600480360381019061010e91906114f6565b6102ab565b005b61012f600480360381019061012a91906113dd565b6104ad565b60405161013c91906117db565b60405180910390f35b61015f600480360381019061015a9190611406565b6104c5565b60405161016c91906117db565b60405180910390f35b61018f600480360381019061018a9190611491565b6104ea565b005b6101996106be565b6040516101a691906116ca565b60405180910390f35b6101b76106d1565b005b6101d360048036038101906101ce91906113dd565b610779565b6040516101e0919061164f565b60405180910390f35b6101f16107ac565b6040516101fe91906116e5565b60405180910390f35b61020f6107d2565b005b61022b600480360381019061022691906114f6565b61090f565b005b610235610afd565b604051610242919061164f565b60405180910390f35b610253610b27565b6040516102609190611700565b60405180910390f35b610271610b4d565b005b61028d60048036038101906102889190611442565b610cc0565b005b6102a960048036038101906102a491906113dd565b610e4a565b005b6000606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083111561036f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103669061177b565b60405180910390fd5b6000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846103bc9190611807565b9050606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161041b9291906116a1565b602060405180830381600087803b15801561043557600080fd5b505af1158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d91906114cd565b507f65ac0d8bb8cbc0e989ebd02ddc5161d7c499f7c21792e43fcf170314fe6bcc3f338560405161049f9291906116a1565b60405180910390a150505050565b60676020528060005260406000206000915090505481565b6068602052816000526040600020602052806000526040600020600091509150505481565b33606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461057b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105729061171b565b60405180910390fd5b6000606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561061a57506106b9565b600061062584610ff6565b905080606760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106769190611807565b925050819055507f401ccfec4c6c7ac3f3b71182750d0f8d73c0d29cc476732b0b21ab0d359da47f33826040516106ae9291906116a1565b60405180910390a150505b505050565b606a60009054906101000a900460ff1681565b6106d9611026565b73ffffffffffffffffffffffffffffffffffffffff166106f7610afd565b73ffffffffffffffffffffffffffffffffffffffff161461074d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107449061179b565b60405180910390fd5b606a60009054906101000a900460ff1615606a60006101000a81548160ff021916908315150217905550565b60696020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107da611026565b73ffffffffffffffffffffffffffffffffffffffff166107f8610afd565b73ffffffffffffffffffffffffffffffffffffffff161461084e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108459061179b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161096e9392919061166a565b602060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c091906114cd565b5081606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb84e3fb7018c9521a76e8e3120cc6d7690c77a7942a05180d3e86d2cbe28bb6f3383604051610af19291906116a1565b60405180910390a15050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb906117bb565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c319291906116a1565b602060405180830381600087803b158015610c4b57600080fd5b505af1158015610c5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8391906114cd565b507f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72413382604051610cb59291906116a1565b60405180910390a150565b600060019054906101000a900460ff1680610ce6575060008054906101000a900460ff16155b610d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1c9061175b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d75576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b83606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001606a60006101000a81548160ff021916908315150217905550610e1a61102e565b610e2382610e4a565b8015610e445760008060016101000a81548160ff0219169083151502179055505b50505050565b610e52611026565b73ffffffffffffffffffffffffffffffffffffffff16610e70610afd565b73ffffffffffffffffffffffffffffffffffffffff1614610ec6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebd9061179b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2d9061173b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061101f606461101160028561111790919063ffffffff16565b61112d90919063ffffffff16565b9050919050565b600033905090565b600060019054906101000a900460ff1680611054575060008054906101000a900460ff16155b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108a9061175b565b60405180910390fd5b60008060019054906101000a900460ff1615905080156110e3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6110eb611143565b6110f361121c565b80156111145760008060016101000a81548160ff0219169083151502179055505b50565b60008183611125919061188e565b905092915050565b6000818361113b919061185d565b905092915050565b600060019054906101000a900460ff1680611169575060008054906101000a900460ff16155b6111a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119f9061175b565b60405180910390fd5b60008060019054906101000a900460ff1615905080156111f8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156112195760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611242575060008054906101000a900460ff16155b611281576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112789061175b565b60405180910390fd5b60008060019054906101000a900460ff1615905080156112d1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60006112db611026565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350801561139b5760008060016101000a81548160ff0219169083151502179055505b50565b6000813590506113ad81611b18565b92915050565b6000815190506113c281611b2f565b92915050565b6000813590506113d781611b46565b92915050565b6000602082840312156113ef57600080fd5b60006113fd8482850161139e565b91505092915050565b6000806040838503121561141957600080fd5b60006114278582860161139e565b92505060206114388582860161139e565b9150509250929050565b60008060006060848603121561145757600080fd5b60006114658682870161139e565b93505060206114768682870161139e565b92505060406114878682870161139e565b9150509250925092565b600080604083850312156114a457600080fd5b60006114b28582860161139e565b92505060206114c3858286016113c8565b9150509250929050565b6000602082840312156114df57600080fd5b60006114ed848285016113b3565b91505092915050565b6000806040838503121561150957600080fd5b6000611517858286016113c8565b92505060206115288582860161139e565b9150509250929050565b61153b816118e8565b82525050565b61154a816118fa565b82525050565b61155981611930565b82525050565b61156881611954565b82525050565b600061157b6017836117f6565b9150611586826119d6565b602082019050919050565b600061159e6026836117f6565b91506115a9826119ff565b604082019050919050565b60006115c1602e836117f6565b91506115cc82611a4e565b604082019050919050565b60006115e46017836117f6565b91506115ef82611a9d565b602082019050919050565b60006116076020836117f6565b915061161282611ac6565b602082019050919050565b600061162a6012836117f6565b915061163582611aef565b602082019050919050565b61164981611926565b82525050565b60006020820190506116646000830184611532565b92915050565b600060608201905061167f6000830186611532565b61168c6020830185611532565b6116996040830184611640565b949350505050565b60006040820190506116b66000830185611532565b6116c36020830184611640565b9392505050565b60006020820190506116df6000830184611541565b92915050565b60006020820190506116fa6000830184611550565b92915050565b6000602082019050611715600083018461155f565b92915050565b600060208201905081810360008301526117348161156e565b9050919050565b6000602082019050818103600083015261175481611591565b9050919050565b60006020820190508181036000830152611774816115b4565b9050919050565b60006020820190508181036000830152611794816115d7565b9050919050565b600060208201905081810360008301526117b4816115fa565b9050919050565b600060208201905081810360008301526117d48161161d565b9050919050565b60006020820190506117f06000830184611640565b92915050565b600082825260208201905092915050565b600061181282611926565b915061181d83611926565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561185257611851611978565b5b828201905092915050565b600061186882611926565b915061187383611926565b925082611883576118826119a7565b5b828204905092915050565b600061189982611926565b91506118a483611926565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118dd576118dc611978565b5b828202905092915050565b60006118f382611906565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061193b82611942565b9050919050565b600061194d82611906565b9050919050565b600061195f82611966565b9050919050565b600061197182611906565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f696e76616c6964206e6574776f726b2061646472657373000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f696e76616c696420776974686472617720616d6f756e74000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f2072657761726420746f20636c61696d0000000000000000000000000000600082015250565b611b21816118e8565b8114611b2c57600080fd5b50565b611b38816118fa565b8114611b4357600080fd5b50565b611b4f81611926565b8114611b5a57600080fd5b5056fea2646970667358221220c7e0cc6b11e83e25fe4ae95701793574dd309876d3ab86a9e36a9d87f9217ff664736f6c63430008020033";

export class UnderwriteManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnderwriteManager> {
    return super.deploy(overrides || {}) as Promise<UnderwriteManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UnderwriteManager {
    return super.attach(address) as UnderwriteManager;
  }
  connect(signer: Signer): UnderwriteManager__factory {
    return super.connect(signer) as UnderwriteManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnderwriteManagerInterface {
    return new utils.Interface(_abi) as UnderwriteManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnderwriteManager {
    return new Contract(address, _abi, signerOrProvider) as UnderwriteManager;
  }
}
