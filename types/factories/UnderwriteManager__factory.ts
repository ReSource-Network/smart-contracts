/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnderwriteManager,
  UnderwriteManagerInterface,
} from "../UnderwriteManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Underwrite",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "underwriter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawl",
    type: "event",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_networkTokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "networkToken",
    outputs: [
      {
        internalType: "contract CIP36",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "underwritee",
        type: "address",
      },
    ],
    name: "underwrite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "underwritees",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "underwriterCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underwritee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "txAmount",
        type: "uint256",
      },
    ],
    name: "updateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "underwritee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506117db806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c806351c76c70116100975780638da5cb5b116100665780638da5cb5b14610249578063b2016bd414610267578063b88a802f14610285578063f2fde38b1461028f576100f4565b806351c76c70146101d55780636ca95a4e14610205578063715018a614610223578063761f73371461022d576100f4565b80631a399125116100d35780631a3991251461017557806322f3e2d41461019157806329c68dc1146101af578063485cc955146101b9576100f4565b8062f714ce146100f95780630700037d1461011557806307630e1014610145575b600080fd5b610113600480360381019061010e9190611118565b6102ab565b005b61012f600480360381019061012a919061104e565b6104ad565b60405161013c91906113fd565b60405180910390f35b61015f600480360381019061015a9190611077565b6104c5565b60405161016c91906113fd565b60405180910390f35b61018f600480360381019061018a91906110b3565b6104ea565b005b6101996106be565b6040516101a691906112ec565b60405180910390f35b6101b76106d1565b005b6101d360048036038101906101ce9190611077565b610779565b005b6101ef60048036038101906101ea919061104e565b6108f1565b6040516101fc9190611271565b60405180910390f35b61020d610924565b60405161021a9190611307565b60405180910390f35b61022b61094a565b005b61024760048036038101906102429190611118565b610a87565b005b610251610c3c565b60405161025e9190611271565b60405180910390f35b61026f610c66565b60405161027c9190611322565b60405180910390f35b61028d610c8c565b005b6102a960048036038101906102a4919061104e565b610dff565b005b6000606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083111561036f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103669061137d565b60405180910390fd5b6000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846103bc9190611429565b9050606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161041b9291906112c3565b602060405180830381600087803b15801561043557600080fd5b505af1158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d91906110ef565b507f65ac0d8bb8cbc0e989ebd02ddc5161d7c499f7c21792e43fcf170314fe6bcc3f338560405161049f9291906112c3565b60405180910390a150505050565b60676020528060005260406000206000915090505481565b6068602052816000526040600020602052806000526040600020600091509150505481565b338073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461057b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906113bd565b60405180910390fd5b6000606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561061a57506106b9565b600061062584610fab565b905080606760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106769190611429565b925050819055507f401ccfec4c6c7ac3f3b71182750d0f8d73c0d29cc476732b0b21ab0d359da47f33826040516106ae9291906112c3565b60405180910390a150505b505050565b606a60009054906101000a900460ff1681565b6106d9610fdb565b73ffffffffffffffffffffffffffffffffffffffff166106f7610c3c565b73ffffffffffffffffffffffffffffffffffffffff161461074d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107449061139d565b60405180910390fd5b606a60009054906101000a900460ff1615606a60006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff168061079f575060008054906101000a900460ff16155b6107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d59061135d565b60405180910390fd5b60008060019054906101000a900460ff16159050801561082e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b82606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001606a60006101000a81548160ff02191690831515021790555080156108ec5760008060016101000a81548160ff0219169083151502179055505b505050565b60696020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610952610fdb565b73ffffffffffffffffffffffffffffffffffffffff16610970610c3c565b73ffffffffffffffffffffffffffffffffffffffff16146109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd9061139d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ae69392919061128c565b602060405180830381600087803b158015610b0057600080fd5b505af1158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3891906110ef565b5081606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a906113dd565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d709291906112c3565b602060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc291906110ef565b507f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72413382604051610df49291906112c3565b60405180910390a150565b610e07610fdb565b73ffffffffffffffffffffffffffffffffffffffff16610e25610c3c565b73ffffffffffffffffffffffffffffffffffffffff1614610e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e729061139d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610eeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee29061133d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610fd46064610fc6600285610fe390919063ffffffff16565b610ff990919063ffffffff16565b9050919050565b600033905090565b60008183610ff191906114b0565b905092915050565b60008183611007919061147f565b905092915050565b60008135905061101e81611760565b92915050565b60008151905061103381611777565b92915050565b6000813590506110488161178e565b92915050565b60006020828403121561106057600080fd5b600061106e8482850161100f565b91505092915050565b6000806040838503121561108a57600080fd5b60006110988582860161100f565b92505060206110a98582860161100f565b9150509250929050565b600080604083850312156110c657600080fd5b60006110d48582860161100f565b92505060206110e585828601611039565b9150509250929050565b60006020828403121561110157600080fd5b600061110f84828501611024565b91505092915050565b6000806040838503121561112b57600080fd5b600061113985828601611039565b925050602061114a8582860161100f565b9150509250929050565b61115d8161150a565b82525050565b61116c8161151c565b82525050565b61117b81611552565b82525050565b61118a81611576565b82525050565b600061119d602683611418565b91506111a8826115f8565b604082019050919050565b60006111c0602e83611418565b91506111cb82611647565b604082019050919050565b60006111e3601783611418565b91506111ee82611696565b602082019050919050565b6000611206602083611418565b9150611211826116bf565b602082019050919050565b6000611229602b83611418565b9150611234826116e8565b604082019050919050565b600061124c601283611418565b915061125782611737565b602082019050919050565b61126b81611548565b82525050565b60006020820190506112866000830184611154565b92915050565b60006060820190506112a16000830186611154565b6112ae6020830185611154565b6112bb6040830184611262565b949350505050565b60006040820190506112d86000830185611154565b6112e56020830184611262565b9392505050565b60006020820190506113016000830184611163565b92915050565b600060208201905061131c6000830184611172565b92915050565b60006020820190506113376000830184611181565b92915050565b6000602082019050818103600083015261135681611190565b9050919050565b60006020820190508181036000830152611376816111b3565b9050919050565b60006020820190508181036000830152611396816111d6565b9050919050565b600060208201905081810360008301526113b6816111f9565b9050919050565b600060208201905081810360008301526113d68161121c565b9050919050565b600060208201905081810360008301526113f68161123f565b9050919050565b60006020820190506114126000830184611262565b92915050565b600082825260208201905092915050565b600061143482611548565b915061143f83611548565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114745761147361159a565b5b828201905092915050565b600061148a82611548565b915061149583611548565b9250826114a5576114a46115c9565b5b828204905092915050565b60006114bb82611548565b91506114c683611548565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114ff576114fe61159a565b5b828202905092915050565b600061151582611528565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061155d82611564565b9050919050565b600061156f82611528565b9050919050565b600061158182611588565b9050919050565b600061159382611528565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f696e76616c696420776974686472617720616d6f756e74000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f6e6c7920746865206e6574776f726b2063616e20706572666f726d2074686960008201527f73206f7065726174696f6e000000000000000000000000000000000000000000602082015250565b7f4e6f2072657761726420746f20636c61696d0000000000000000000000000000600082015250565b6117698161150a565b811461177457600080fd5b50565b6117808161151c565b811461178b57600080fd5b50565b61179781611548565b81146117a257600080fd5b5056fea2646970667358221220f8dce77878455cddfb4e65de43e2411a4aa275ceb0fd92bcd1fac0c7565d6d5764736f6c63430008020033";

export class UnderwriteManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnderwriteManager> {
    return super.deploy(overrides || {}) as Promise<UnderwriteManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UnderwriteManager {
    return super.attach(address) as UnderwriteManager;
  }
  connect(signer: Signer): UnderwriteManager__factory {
    return super.connect(signer) as UnderwriteManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnderwriteManagerInterface {
    return new utils.Interface(_abi) as UnderwriteManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnderwriteManager {
    return new Contract(address, _abi, signerOrProvider) as UnderwriteManager;
  }
}
